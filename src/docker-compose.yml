version: '3.4'

services:
  passwordmanager.web:
    image: ${DOCKER_REGISTRY-}passwordmanagerweb
    container_name: passwordmanager.web
    build:
      context: .
      dockerfile: PasswordManager.Web/Dockerfile
      args:
        BUILD_CONFIGURATION: Release  # Use Release configuration
    environment:
      - ASPNETCORE_ENVIRONMENT=Production  # Set to Production for runtime behavior
      - DOTNET_RUNNING_IN_CONTAINER=true  # Set to optimize behavior in container
      - DOTNET_GENERATE_ASPNET_CERTIFICATE=false  # Disable certificate generation
      - DATABASE_CONNECTION=${MSSQL_CONNECTIONSTRING}
    ports:
        - "8080:8080"
        - "8081:8081"
    depends_on:
        - passwordmanager.db
    networks:
      - passwordmanager_network

  passwordmanager.db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: passwordmanager.db
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=${MSSQL_PASSWORD}
      - ACCEPT_EULA=Y
    volumes:
      - mssql_data:/var/opt/mssql
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - passwordmanager_network

  passwordmanager.client:
    container_name: passwordmanager.client
    build:
        context: ./PasswordManager.Client
        dockerfile: Dockerfile
    ports:
      - "80:80"
      - "81:81"
    depends_on:
        - passwordmanager.web
    networks:
      - passwordmanager_network

# Define volumes
volumes:
  mssql_data:

# Define network
networks:
  passwordmanager_network:
    driver: bridge
