version: '3.9'

services:
  # .NET Core Web API
  webapi:
    build:
      context: ./api/  # Assuming the Dockerfile is in the root directory of your project
      dockerfile: ./PasswordManager.Web/Dockerfile  # Adjust if the Dockerfile has a different name or location
    restart: unless-stopped
    ports:
      - "5000:8080"  # Map port 80 of the container to port 5000 on the host
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__passwordmanager.dev=Server=mssql;Database=passwordmanager.dev;Trusted_Connection=False;User Id=sa;Password=MyP@ssword;MultipleActiveResultSets=true
      - Logging__LogLevel__Default=Information
    depends_on:
      - mssql
  
  # Vue.js frontend
  frontend:
    build:
      context: ./client # Set the context to the directory containing your Dockerfile 
      dockerfile: ./Dockerfile  # Use the correct Dockerfile name
    restart: unless-stopped
    ports:
      - "8080:80"  # Map port 80 of the container to port 8080 on the host
    depends_on:
      - webapi

  # MSSQL Server
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    ports:
      - "5533:1433"
    environment:
      - SA_PASSWORD=${PASSWORD}
      - ACCEPT_EULA=Y
    volumes:
      - mssql_data:/var/opt/mssql

  # Mailhog (for development only)
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # HTTP UI

# Define volumes
volumes:
  mssql_data:


